import{a4 as D,a5 as C,h as Z,m as n,o as f,q as E,O as S,a6 as l,a7 as N,a8 as W,a9 as c,d as p,E as h,aa as q,ab as _,i as d,ac as b,ad as F,G as z,f as g,c as X,ae as A,af as M,u as T,ag as Y,ah as $,D as y,w as I}from"./index-BkPAYC4t.js";const L=D.inherit({_getDefaultOptions(){return f(this.callBase(),{min:0,max:100,value:0})},_initMarkup(){this.$element().addClass("dx-trackbar"),this._renderWrapper(),this._renderContainer(),this._renderRange(),this._renderValue(),this._setRangeStyles(),this.callBase()},_render(){this.callBase(),this._setRangeStyles(this._rangeStylesConfig())},_renderWrapper(){this._$wrapper=n("<div>").addClass("dx-trackbar-wrapper").appendTo(this.$element())},_renderContainer(){this._$bar=n("<div>").addClass("dx-trackbar-container").appendTo(this._$wrapper)},_renderRange(){this._$range=n("<div>").addClass("dx-trackbar-range").appendTo(this._$bar)},_renderValue(){const o=this.option("value"),e=this.option("min"),t=this.option("max");if(e>t)return;if(o<e){this.option("value",e),this._currentRatio=0;return}if(o>t){this.option("value",t),this._currentRatio=1;return}const i=e===t?0:(o-e)/(t-e);!this._needPreventAnimation&&this._setRangeStyles({width:100*i+"%"}),this.setAria({valuemin:this.option("min"),valuemax:t,valuenow:o}),this._currentRatio=i},_rangeStylesConfig(){return{width:100*this._currentRatio+"%"}},_setRangeStyles(o){if(C.stop(this._$range),!o){this._$range.css({width:0});return}this._needPreventAnimation||!Z()||C.animate(this._$range,{type:"custom",duration:100,to:o})},_optionChanged(o){switch(o.name){case"value":this._renderValue(),this.callBase(o);break;case"max":case"min":this._renderValue();break;default:this.callBase(o)}},_dispose(){C.stop(this._$range),this.callBase()}});E("dxTrackBar",L);const k="dx-progressbar-animating-segment",w=L.inherit({_getDefaultOptions(){return f(this.callBase(),{value:0,statusFormat:o=>`Progress: ${Math.round(100*o)}%`,showStatus:!0,onComplete:null,activeStateEnabled:!1,statusPosition:"bottom left",_animatingSegmentCount:0})},_defaultOptionsRules(){return this.callBase().concat([{device:o=>o.platform==="android",options:{_animatingSegmentCount:2}}])},_toggleReadOnlyState(){this.setAria("readonly",void 0)},_initMarkup(){this._renderStatus(),this._createCompleteAction(),this.callBase(),this.$element().addClass("dx-progressbar"),this._$wrapper.addClass("dx-progressbar-wrapper"),this._$bar.addClass("dx-progressbar-container"),this.setAria("role","progressbar"),n("<div>").addClass("dx-progressbar-range-container").appendTo(this._$wrapper).append(this._$bar),this._$range.addClass("dx-progressbar-range"),this._toggleStatus(this.option("showStatus"))},_useTemplates:()=>!1,_createCompleteAction(){this._completeAction=this._createActionByOption("onComplete")},_renderStatus(){this._$status=n("<div>").addClass("dx-progressbar-status")},_renderIndeterminateState(){this._$segmentContainer=n("<div>").addClass("dx-progressbar-animating-container");const o=this.option("_animatingSegmentCount");for(let e=0;e<o;e++)n("<div>").addClass(k).addClass(`${k}-${e+1}`).appendTo(this._$segmentContainer);this._$segmentContainer.appendTo(this._$wrapper)},_toggleStatus(o){const e=this.option("statusPosition").split(" ");o?e[0]==="top"||e[0]==="left"?this._$status.prependTo(this._$wrapper):this._$status.appendTo(this._$wrapper):this._$status.detach(),this._togglePositionClass()},_togglePositionClass(){const e=this.option("statusPosition").split(" ");this._$wrapper.removeClass("dx-position-top-left dx-position-top-right dx-position-bottom-left dx-position-bottom-right dx-position-left dx-position-right");let t=`dx-position-${e[0]}`;e[1]&&(t+=`-${e[1]}`),this._$wrapper.addClass(t)},_toggleIndeterminateState(o){o?(this._renderIndeterminateState(),this._$bar.toggle(!1)):(this._$bar.toggle(!0),this._$segmentContainer.remove(),delete this._$segmentContainer)},_renderValue(){const o=this.option("value"),e=this.option("max");if(!o&&o!==0){this._toggleIndeterminateState(!0);return}this._$segmentContainer&&this._toggleIndeterminateState(!1),o===e&&this._completeAction(),this.callBase(),this._setStatus()},_setStatus(){let o=this.option("statusFormat");S(o)?o=o.bind(this):o=function(t){return t};const e=o(this._currentRatio,this.option("value"));this._$status.text(e)},_dispose(){this._$status.remove(),this.callBase()},_optionChanged(o){switch(o.name){case"statusFormat":this._setStatus();break;case"showStatus":this._toggleStatus(o.value);break;case"statusPosition":this._toggleStatus(this.option("showStatus"));break;case"onComplete":this._createCompleteAction();break;case"_animatingSegmentCount":break;default:this.callBase(o)}}});E("dxProgressBar",w);const G=D,v=X();let j=()=>n("<input>").attr("type","file");const x=()=>!!v.FormData;class K extends G{_supportedKeys(){const e=t=>{t.preventDefault();const i=this._selectButton.$element();p.trigger(i,Y)};return f(super._supportedKeys(),{space:e,enter:e})}_setOptionsByReference(){super._setOptionsByReference(),f(this._optionsByReference,{value:!0})}_getDefaultOptions(){return f(super._getDefaultOptions(),{chunkSize:0,value:[],selectButtonText:l.format("dxFileUploader-selectFile"),uploadButtonText:l.format("dxFileUploader-upload"),labelText:l.format("dxFileUploader-dropFile"),name:"files[]",multiple:!1,accept:"",uploadUrl:"/",allowCanceling:!0,showFileList:!0,progress:0,dialogTrigger:void 0,dropZone:void 0,readyToUploadMessage:l.format("dxFileUploader-readyToUpload"),uploadedMessage:l.format("dxFileUploader-uploaded"),uploadFailedMessage:l.format("dxFileUploader-uploadFailedMessage"),uploadAbortedMessage:l.format("dxFileUploader-uploadAbortedMessage"),uploadMode:"instantly",uploadMethod:"POST",uploadHeaders:{},uploadCustomData:{},onBeforeSend:null,onUploadStarted:null,onUploaded:null,onFilesUploaded:null,onProgress:null,onUploadError:null,onUploadAborted:null,onDropZoneEnter:null,onDropZoneLeave:null,allowedFileExtensions:[],maxFileSize:0,minFileSize:0,inputAttr:{},invalidFileExtensionMessage:l.format("dxFileUploader-invalidFileExtension"),invalidMaxFileSizeMessage:l.format("dxFileUploader-invalidMaxFileSize"),invalidMinFileSizeMessage:l.format("dxFileUploader-invalidMinFileSize"),extendSelection:!0,validationMessageMode:"always",uploadFile:null,uploadChunk:null,abortUpload:null,validationMessageOffset:{h:0,v:0},hoverStateEnabled:!0,useNativeInputClick:!1,useDragOver:!0,nativeDropSupported:!0,_uploadButtonType:"normal",_buttonStylingMode:"contained"})}_defaultOptionsRules(){return super._defaultOptionsRules().concat([{device:()=>c.real().deviceType==="desktop"&&!c.isSimulator(),options:{focusStateEnabled:!0}},{device:[{platform:"android"}],options:{validationMessageOffset:{v:0}}},{device:()=>c.real().deviceType!=="desktop",options:{useDragOver:!1}},{device:()=>!x(),options:{uploadMode:"useForm"}},{device:()=>c.real().deviceType!=="desktop",options:{nativeDropSupported:!1}},{device:()=>N(),options:{_uploadButtonType:"default"}},{device:()=>W(),options:{_buttonStylingMode:"text"}}])}_initOptions(e){const t="labelText"in e;super._initOptions(e),!t&&!this._shouldDragOverBeRendered()&&this.option("labelText","")}_init(){super._init(),this._initFileInput(),this._initLabel(),this._setUploadStrategy(),this._createFiles(),this._createBeforeSendAction(),this._createUploadStartedAction(),this._createUploadedAction(),this._createFilesUploadedAction(),this._createProgressAction(),this._createUploadErrorAction(),this._createUploadAbortedAction(),this._createDropZoneEnterAction(),this._createDropZoneLeaveAction()}_setUploadStrategy(){if(this.option("chunkSize")>0){const e=this.option("uploadChunk");this._uploadStrategy=e&&S(e)?new ee(this):new Q(this)}else{const e=this.option("uploadFile");this._uploadStrategy=e&&S(e)?new ie(this):new te(this)}}_initFileInput(){this._isCustomClickEvent=!1;const{multiple:e,accept:t,hint:i}=this.option();this._$fileInput||(this._$fileInput=j(),p.on(this._$fileInput,"change",this._inputChangeHandler.bind(this)),p.on(this._$fileInput,"click",s=>(s.stopPropagation(),this._resetInputValue(),this.option("useNativeInputClick")||this._isCustomClickEvent)));const a={multiple:e,accept:t,tabIndex:-1};d(i)&&(a.title=i),this._$fileInput.prop(a)}_inputChangeHandler(){if(this._doPreventInputChange)return;const e=this._$fileInput.val().replace(/^.*\\/,""),t=this._$fileInput.prop("files");if(t&&!t.length&&this.option("uploadMode")!=="useForm")return;const i=t?this._getFiles(t):[{name:e}];this._changeValue(i),this.option("uploadMode")==="instantly"&&this._uploadFiles()}_shouldFileListBeExtended(){return this.option("uploadMode")!=="useForm"&&this.option("extendSelection")&&this.option("multiple")}_changeValue(e){const t=this._shouldFileListBeExtended()?this.option("value").slice():[];this.option("value",t.concat(e))}_getFiles(e){const t=[];return h(e,(i,a)=>t.push(a)),t}_getFile(e){const t=q(e)?this.option("value")[e]:e;return this._files.filter(i=>i.value===t)[0]}_initLabel(){this._$inputLabel||(this._$inputLabel=n("<div>")),this._updateInputLabelText()}_updateInputLabelText(){const e=this._isInteractionDisabled()?"":this.option("labelText");this._$inputLabel.text(e)}_focusTarget(){return this.$element().find(".dx-fileuploader-button")}_getSubmitElement(){return this._$fileInput}_initMarkup(){super._initMarkup(),this.$element().addClass("dx-fileuploader"),this._renderWrapper(),this._renderInputWrapper(),this._renderSelectButton(),this._renderInputContainer(),this._renderUploadButton(),this._preventRecreatingFiles=!0,this._activeDropZone=null}_render(){this._preventRecreatingFiles=!1,this._attachDragEventHandlers(this._$inputWrapper),this._attachDragEventHandlers(this.option("dropZone")),this._renderFiles(),super._render()}_createFileProgressBar(e){e.progressBar=this._createProgressBar(e.value.size),e.progressBar.$element().appendTo(e.$file),this._initStatusMessage(e),this._ensureCancelButtonInitialized(e)}_setStatusMessage(e,t){setTimeout(()=>{this.option("showFileList")&&e.$statusMessage&&(e.$statusMessage.text(t),e.$statusMessage.css("display",""),e.progressBar.$element().remove())},400)}_getUploadAbortedStatusMessage(){return this.option("uploadMode")==="instantly"?this.option("uploadAbortedMessage"):this.option("readyToUploadMessage")}_createFiles(){const e=this.option("value");this._files&&((e==null?void 0:e.length)===0||!this._shouldFileListBeExtended())&&(this._preventFilesUploading(this._files),this._files=null),this._files||(this._files=[]),h(e==null?void 0:e.slice(this._files.length),(t,i)=>{const a=this._createFile(i);this._validateFile(a),this._files.push(a)})}_preventFilesUploading(e){e.forEach(t=>this._uploadStrategy.abortUpload(t))}_validateFile(e){e.isValidFileExtension=this._validateFileExtension(e),e.isValidMinSize=this._validateMinFileSize(e),e.isValidMaxSize=this._validateMaxFileSize(e)}_validateFileExtension(e){const t=this.option("allowedFileExtensions"),i=this.option("accept"),a=this._getAllowedFileTypes(i),s=e.value.name.substring(e.value.name.lastIndexOf(".")).toLowerCase();if((i==null?void 0:i.length)!==0&&!this._isFileTypeAllowed(e.value,a))return!1;if((t==null?void 0:t.length)===0)return!0;for(let r=0;r<t.length;r++)if(s===t[r].toLowerCase())return!0;return!1}_validateMaxFileSize(e){const t=e.value.size,i=this.option("maxFileSize");return i>0?t<=i:!0}_validateMinFileSize(e){const t=e.value.size,i=this.option("minFileSize");return i>0?t>=i:!0}_createBeforeSendAction(){this._beforeSendAction=this._createActionByOption("onBeforeSend",{excludeValidators:["readOnly"]})}_createUploadStartedAction(){this._uploadStartedAction=this._createActionByOption("onUploadStarted",{excludeValidators:["readOnly"]})}_createUploadedAction(){this._uploadedAction=this._createActionByOption("onUploaded",{excludeValidators:["readOnly"]})}_createFilesUploadedAction(){this._filesUploadedAction=this._createActionByOption("onFilesUploaded",{excludeValidators:["readOnly"]})}_createProgressAction(){this._progressAction=this._createActionByOption("onProgress",{excludeValidators:["readOnly"]})}_createUploadAbortedAction(){this._uploadAbortedAction=this._createActionByOption("onUploadAborted",{excludeValidators:["readOnly"]})}_createUploadErrorAction(){this._uploadErrorAction=this._createActionByOption("onUploadError",{excludeValidators:["readOnly"]})}_createDropZoneEnterAction(){this._dropZoneEnterAction=this._createActionByOption("onDropZoneEnter")}_createDropZoneLeaveAction(){this._dropZoneLeaveAction=this._createActionByOption("onDropZoneLeave")}_createFile(e){return{value:e,loadedSize:0,onProgress:_(),onAbort:_(),onLoad:_(),onError:_(),onLoadStart:_(),isValidFileExtension:!0,isValidMaxSize:!0,isValidMinSize:!0,isValid(){return this.isValidFileExtension&&this.isValidMaxSize&&this.isValidMinSize},isInitialized:!1}}_resetFileState(e){e.isAborted=!1,e.uploadStarted=!1,e.isStartLoad=!1,e.loadedSize=0,e.chunksData=void 0,e.request=void 0}_renderFiles(){var e;const t=this.option("value");this._$filesContainer?(!this._shouldFileListBeExtended()||(t==null?void 0:t.length)===0)&&this._$filesContainer.empty():this._$filesContainer=n("<div>").addClass("dx-fileuploader-files-container").appendTo(this._$content);const i=this.option("showFileList");i&&h(this._files,(a,s)=>{s.$file||this._renderFile(s)}),this.$element().toggleClass("dx-fileuploader-show-file-list",i),this._toggleFileUploaderEmptyClassName(),this._updateFileNameMaxWidth(),(e=this._validationMessage)===null||e===void 0||e.repaint()}_renderFile(e){const{value:t}=e,i=n("<div>").addClass("dx-fileuploader-file-container").appendTo(this._$filesContainer);this._renderFileButtons(e,i),e.$file=n("<div>").addClass("dx-fileuploader-file").appendTo(i);const a=n("<div>").addClass("dx-fileuploader-file-info").appendTo(e.$file);e.$statusMessage=n("<div>").addClass("dx-fileuploader-file-status-message").appendTo(e.$file),n("<div>").addClass("dx-fileuploader-file-name").text(t.name).appendTo(a),d(t.size)&&n("<div>").addClass("dx-fileuploader-file-size").text(this._getFileSize(t.size)).appendTo(a),e.isValid()?e.$statusMessage.text(this.option("readyToUploadMessage")):(e.isValidFileExtension||e.$statusMessage.append(this._createValidationElement("invalidFileExtensionMessage")),e.isValidMaxSize||e.$statusMessage.append(this._createValidationElement("invalidMaxFileSizeMessage")),e.isValidMinSize||e.$statusMessage.append(this._createValidationElement("invalidMinFileSizeMessage")),i.addClass("dx-fileuploader-invalid"))}_createValidationElement(e){return n("<span>").text(this.option(e))}_updateFileNameMaxWidth(){const e=this.option("allowCanceling")&&this.option("uploadMode")!=="useForm"?1:0,t=this.option("uploadMode")==="useButtons"?1:0,i=b(this._$filesContainer.find(".dx-fileuploader-file-container").first())||b(this._$filesContainer),a=this._$filesContainer.find(".dx-fileuploader-button-container").eq(0),s=b(a)*(e+t),r=this._$filesContainer.find(".dx-fileuploader-file-size").eq(0),u=r.text();r.text("1000 Mb");const m=b(r);r.text(u),this._$filesContainer.find(".dx-fileuploader-file-name").css("maxWidth",i-s-m)}_renderFileButtons(e,t){const i=this._getCancelButton(e);i&&t.append(i);const a=this._getUploadButton(e);a&&t.append(a)}_getCancelButton(e){if(this.option("uploadMode")==="useForm")return null;const{allowCanceling:t,readOnly:i,hoverStateEnabled:a,_buttonStylingMode:s}=this.option();return e.cancelButton=this._createComponent(n("<div>").addClass("dx-fileuploader-button dx-fileuploader-cancel-button"),F,{onClick:()=>this._removeFile(e),icon:"close",visible:t,disabled:i,integrationOptions:{},hoverStateEnabled:a,stylingMode:s}),n("<div>").addClass("dx-fileuploader-button-container").append(e.cancelButton.$element())}_getUploadButton(e){if(!e.isValid()||this.option("uploadMode")!=="useButtons")return null;const{hoverStateEnabled:t,_buttonStylingMode:i}=this.option();return e.uploadButton=this._createComponent(n("<div>").addClass("dx-fileuploader-button dx-fileuploader-upload-button"),F,{onClick:()=>this._uploadFile(e),icon:"upload",hoverStateEnabled:t,stylingMode:i}),e.onLoadStart.add(()=>e.uploadButton.option({visible:!1,disabled:!0})),e.onAbort.add(()=>e.uploadButton.option({visible:!0,disabled:!1})),n("<div>").addClass("dx-fileuploader-button-container").append(e.uploadButton.$element())}_removeFile(e){var t;(t=e.$file)===null||t===void 0||t.parent().remove(),this._files.splice(this._files.indexOf(e),1);const i=this.option("value").slice();i.splice(i.indexOf(e.value),1),this._preventRecreatingFiles=!0,this.option("value",i),this._preventRecreatingFiles=!1,this._toggleFileUploaderEmptyClassName(),this._resetInputValue(!0)}removeFile(e){if(this.option("uploadMode")==="useForm"||!d(e))return;const t=this._getFile(e);t&&(t.uploadStarted&&this._preventFilesUploading([t]),this._removeFile(t))}_toggleFileUploaderEmptyClassName(){this.$element().toggleClass("dx-fileuploader-empty",!this._files.length||this._hasInvalidFile(this._files))}_hasInvalidFile(e){for(let t=0;t<e.length;t++)if(!e[t].isValid())return!0;return!1}_getFileSize(e){let t=0;const i=[l.format("dxFileUploader-bytes"),l.format("dxFileUploader-kb"),l.format("dxFileUploader-Mb"),l.format("dxFileUploader-Gb")],a=i.length-1;for(;t<a&&e>=1024;)e/=1024,t++;return`${Math.round(e)} ${i[t]}`}_renderSelectButton(){const e=n("<div>").addClass("dx-fileuploader-button").appendTo(this._$inputWrapper);this._selectButton=this._createComponent(e,F,{text:this.option("selectButtonText"),focusStateEnabled:!1,integrationOptions:{},disabled:this.option("readOnly"),hoverStateEnabled:this.option("hoverStateEnabled")}),this._selectFileDialogHandler=this._selectButtonClickHandler.bind(this),c.real().deviceType==="desktop"?this._selectButton.option("onClick",this._selectFileDialogHandler):this._attachSelectFileDialogHandler(this._selectButton.$element()),this._attachSelectFileDialogHandler(this.option("dialogTrigger"))}_selectButtonClickHandler(){if(!this.option("useNativeInputClick")){if(this._isInteractionDisabled())return!1;this._isCustomClickEvent=!0,p.trigger(this._$fileInput,"click"),this._isCustomClickEvent=!1}}_attachSelectFileDialogHandler(e){d(e)&&(this._detachSelectFileDialogHandler(e),p.on(n(e),"click",this._selectFileDialogHandler))}_detachSelectFileDialogHandler(e){d(e)&&p.off(n(e),"click",this._selectFileDialogHandler)}_renderUploadButton(){if(this.option("uploadMode")!=="useButtons")return;const e=n("<div>").addClass("dx-fileuploader-button").addClass("dx-fileuploader-upload-button").appendTo(this._$content);this._uploadButton=this._createComponent(e,F,{text:this.option("uploadButtonText"),onClick:this._uploadButtonClickHandler.bind(this),type:this.option("_uploadButtonType"),integrationOptions:{},hoverStateEnabled:this.option("hoverStateEnabled")})}_uploadButtonClickHandler(){this._uploadFiles()}_shouldDragOverBeRendered(){return!this.option("readOnly")&&(this.option("uploadMode")!=="useForm"||this.option("nativeDropSupported"))}_isInteractionDisabled(){return this.option("readOnly")||this.option("disabled")}_renderInputContainer(){this._$inputContainer=n("<div>").addClass("dx-fileuploader-input-container").appendTo(this._$inputWrapper),this._$fileInput.addClass("dx-fileuploader-input"),this._renderInput();const e=`dx-fileuploader-input-label-${new z}`;this._$inputLabel.attr("id",e).addClass("dx-fileuploader-input-label").appendTo(this._$inputContainer),this.setAria("labelledby",e,this._$fileInput)}_renderInput(){this.option("useNativeInputClick")?this._selectButton.option("template",this._selectButtonInputTemplate.bind(this)):(this._$fileInput.appendTo(this._$inputContainer),this._selectButton.option("template","content")),this._applyInputAttributes(this.option("inputAttr"))}_selectButtonInputTemplate(e,t){const i=n(t),a=n("<span>").addClass("dx-button-text").text(e.text);return i.append(a).append(this._$fileInput),i}_renderInputWrapper(){this._$inputWrapper=n("<div>").addClass("dx-fileuploader-input-wrapper").appendTo(this._$content)}_detachDragEventHandlers(e){d(e)&&p.off(n(e),g("",this.NAME))}_attachDragEventHandlers(e){const t=e!==this._$inputWrapper;!d(e)||!this._shouldDragOverBeRendered()||(this._detachDragEventHandlers(e),e=n(e),p.on(e,g("dragenter",this.NAME),this._dragEnterHandler.bind(this,t)),p.on(e,g("dragover",this.NAME),this._dragOverHandler.bind(this,t)),p.on(e,g("dragleave",this.NAME),this._dragLeaveHandler.bind(this,t)),p.on(e,g("drop",this.NAME),this._dropHandler.bind(this,t)))}_applyInputAttributes(e){this._$fileInput.attr(e)}_useInputForDrop(){return this.option("nativeDropSupported")&&this.option("uploadMode")==="useForm"}_getDropZoneElement(e,t){let i=e?Array.from(n(this.option("dropZone"))):[this._$inputWrapper];return i=i.map(a=>n(a).get(0)),i[i.indexOf(t.currentTarget)]}_dragEnterHandler(e,t){if(this.option("disabled"))return!1;this._useInputForDrop()||t.preventDefault();const i=this._getDropZoneElement(e,t);d(i)&&this._shouldRaiseDragOver(t,i)&&(this._activeDropZone=i,this._tryToggleDropZoneActive(!0,e,t))}_shouldRaiseDragOver(e,t){return this._activeDropZone===null&&this.isMouseOverElement(e,t,!1)&&e.originalEvent.dataTransfer.types.find(i=>i==="Files")}_dragOverHandler(e,t){if(this._useInputForDrop()||t.preventDefault(),t.originalEvent.dataTransfer.dropEffect="copy",!e){const i=this._getDropZoneElement(!1,t);this._shouldRaiseDragOver(t,i)&&this._dragEnterHandler(!1,t),this._shouldRaiseDragLeave(t,!1)&&this._dragLeaveHandler(!1,t)}}_dragLeaveHandler(e,t){this._useInputForDrop()||t.preventDefault(),this._shouldRaiseDragLeave(t,e)&&(this._tryToggleDropZoneActive(!1,e,t),this._activeDropZone=null)}_shouldRaiseDragLeave(e,t){return this._activeDropZone!==null&&!this.isMouseOverElement(e,this._activeDropZone,!t,-1)}_tryToggleDropZoneActive(e,t,i){const a=e?"addClass":"removeClass";this[e?"_dropZoneEnterAction":"_dropZoneLeaveAction"]({event:i,dropZoneElement:this._activeDropZone}),t||this.$element()[a]("dx-fileuploader-dragover")}_dropHandler(e,t){if(this._activeDropZone=null,e||this.$element().removeClass("dx-fileuploader-dragover"),this._useInputForDrop()||e&&this._isInteractionDisabled())return;t.preventDefault();const i=t.originalEvent.dataTransfer.files,a=this._getFiles(i);!this.option("multiple")&&a.length>1||a.length===0||(this._changeValue(a),this.option("uploadMode")==="instantly"&&this._uploadFiles())}_areAllFilesLoaded(){return this._files.every(e=>!e.isValid()||e._isError||e._isLoaded||e.isAborted)}_handleAllFilesUploaded(){this._recalculateProgress(),this._areAllFilesLoaded()&&this._filesUploadedAction()}_getAllowedFileTypes(e){return e.length?e.split(",").map(t=>t.trim()):[]}_isFileTypeAllowed(e,t){for(let i=0,a=t.length;i<a;i++){let s=t[i];if(s[0]==="."){if(s=s.replace(".","\\."),e.name.match(new RegExp(`${s}$`,"i")))return!0}else if(s=s.replace(new RegExp("\\*","g"),""),e.type.match(new RegExp(s,"i")))return!0}return!1}_renderWrapper(){const e=n("<div>").addClass("dx-fileuploader-wrapper").appendTo(this.$element()),t=n("<div>").addClass("dx-fileuploader-container").appendTo(e);this._$content=n("<div>").addClass("dx-fileuploader-content").appendTo(t)}_clean(){this._$fileInput.detach(),delete this._$filesContainer,this._detachSelectFileDialogHandler(this.option("dialogTrigger")),this._detachDragEventHandlers(this.option("dropZone")),this._files&&this._files.forEach(e=>{e.$file=null,e.$statusMessage=null}),super._clean()}abortUpload(e){if(this.option("uploadMode")!=="useForm")if(d(e)){const t=this._getFile(e);t&&this._preventFilesUploading([t])}else this._preventFilesUploading(this._files)}upload(e){if(this.option("uploadMode")!=="useForm")if(d(e)){const t=this._getFile(e);t&&x()&&this._uploadFile(t)}else this._uploadFiles()}_uploadFiles(){x()&&h(this._files,(e,t)=>this._uploadFile(t))}_uploadFile(e){this._uploadStrategy.upload(e)}_updateProgressBar(e,t){e.progressBar&&e.progressBar.option({value:t.loaded,showStatus:!0}),this._progressAction({file:e.value,segmentSize:t.currentSegmentSize,bytesLoaded:t.loaded,bytesTotal:t.total,event:t.event,request:e.request})}_updateTotalProgress(e,t){let i=0;d(e)&&(this._files.length>0&&this._areAllFilesLoaded()&&e===0&&t===0?i=this._getProgressValue(1):e&&(i=this._getProgressValue(t/e))),this.option("progress",i),this._setLoadedSize(t)}_getProgressValue(e){return Math.floor(100*e)}_initStatusMessage(e){e.$statusMessage.css("display","none")}_ensureCancelButtonInitialized(e){if(e.isInitialized)return;e.cancelButton.option("onClick",()=>{this._preventFilesUploading([e]),this._removeFile(e)});const t=()=>{setTimeout(()=>{e.cancelButton.option({visible:!1})},400)};e.onLoad.add(t),e.onError.add(t)}_createProgressBar(e){return this._createComponent(n("<div>"),w,{value:void 0,min:0,max:e,statusFormat:t=>`${this._getProgressValue(t)}%`,showStatus:!1,statusPosition:"right"})}_getTotalFilesSize(){return this._totalFilesSize||(this._totalFilesSize=0,h(this._files,(e,t)=>{this._totalFilesSize+=t.value.size})),this._totalFilesSize}_getTotalLoadedFilesSize(){return this._totalLoadedFilesSize||(this._totalLoadedFilesSize=0,h(this._files,(e,t)=>{this._totalLoadedFilesSize+=t.loadedSize})),this._totalLoadedFilesSize}_setLoadedSize(e){this._totalLoadedFilesSize=e}_recalculateProgress(){this._totalFilesSize=0,this._totalLoadedFilesSize=0,this._updateTotalProgress(this._getTotalFilesSize(),this._getTotalLoadedFilesSize())}isMouseOverElement(e,t,i){let a=arguments.length>3&&arguments[3]!==void 0?arguments[3]:1;if(!t)return!1;const s=i?parseFloat(v.getComputedStyle(t,":before").height):0,r=i?parseFloat(v.getComputedStyle(t,":after").height):0,u=A(t).left,m=A(t).top+s,R=t.offsetWidth,V=t.offsetHeight-s-r,B=this._getEventX(e),U=this._getEventY(e);return B+a>=u&&B-a<u+R&&U+a>=m&&U-a<m+V}_getEventX(e){return M(e)?this._getTouchEventX(e):e.clientX+this._getDocumentScrollLeft()}_getEventY(e){return M(e)?this._getTouchEventY(e):e.clientY+this._getDocumentScrollTop()}_getTouchEventX(e){let t=null;return e.changedTouches.length>0?t=e.changedTouches:e.targetTouches.length>0&&(t=e.targetTouches),t?t[0].pageX:0}_getTouchEventY(e){let t=null;return e.changedTouches.length>0?t=e.changedTouches:e.targetTouches.length>0&&(t=e.targetTouches),t?t[0].pageY:0}_getDocumentScrollTop(){const e=T.getDocument();return e.documentElement.scrollTop||e.body.scrollTop}_getDocumentScrollLeft(){const e=T.getDocument();return e.documentElement.scrollLeft||e.body.scrollLeft}_updateReadOnlyState(){const e=this.option("readOnly");this._selectButton.option("disabled",e),this._files.forEach(t=>{var i;return(i=t.cancelButton)===null||i===void 0?void 0:i.option("disabled",e)}),this._updateInputLabelText(),this._attachDragEventHandlers(this._$inputWrapper)}_updateHoverState(){var e,t;const i=this.option("hoverStateEnabled");(e=this._selectButton)===null||e===void 0||e.option("hoverStateEnabled",i),(t=this._uploadButton)===null||t===void 0||t.option("hoverStateEnabled",i),this._files.forEach(a=>{var s,r;(s=a.uploadButton)===null||s===void 0||s.option("hoverStateEnabled",i),(r=a.cancelButton)===null||r===void 0||r.option("hoverStateEnabled",i)})}_optionChanged(e){const{name:t,value:i,previousValue:a}=e;switch(t){case"height":case"width":this._updateFileNameMaxWidth(),super._optionChanged(e);break;case"value":!i.length&&this._$fileInput.val(""),this._preventRecreatingFiles||(this._createFiles(),this._renderFiles()),this._recalculateProgress(),super._optionChanged(e);break;case"name":case"hint":this._initFileInput(),super._optionChanged(e);break;case"accept":this._initFileInput();break;case"multiple":this._initFileInput(),e.value||this.clear();break;case"readOnly":this._updateReadOnlyState(),super._optionChanged(e);break;case"disabled":this._updateInputLabelText(),super._optionChanged(e);break;case"selectButtonText":this._selectButton.option("text",i);break;case"uploadButtonText":this._uploadButton&&this._uploadButton.option("text",i);break;case"_uploadButtonType":this._uploadButton&&this._uploadButton.option("type",i);break;case"_buttonStylingMode":this._files.forEach(s=>{var r,u;(r=s.uploadButton)===null||r===void 0||r.option("stylingMode",i),(u=s.cancelButton)===null||u===void 0||u.option("stylingMode",i)});break;case"dialogTrigger":this._detachSelectFileDialogHandler(a),this._attachSelectFileDialogHandler(i);break;case"dropZone":this._detachDragEventHandlers(a),this._attachDragEventHandlers(i);break;case"maxFileSize":case"minFileSize":case"allowedFileExtensions":case"invalidFileExtensionMessage":case"invalidMaxFileSizeMessage":case"invalidMinFileSizeMessage":case"readyToUploadMessage":case"uploadedMessage":case"uploadFailedMessage":case"uploadAbortedMessage":case"nativeDropSupported":this._invalidate();break;case"labelText":this._updateInputLabelText();break;case"showFileList":this._preventRecreatingFiles||this._renderFiles();break;case"uploadFile":case"uploadChunk":case"chunkSize":this._setUploadStrategy();break;case"abortUpload":case"uploadUrl":case"progress":case"uploadMethod":case"uploadHeaders":case"uploadCustomData":case"extendSelection":break;case"hoverStateEnabled":this._updateHoverState(),super._optionChanged(e);break;case"allowCanceling":case"uploadMode":this.clear(),this._invalidate();break;case"onBeforeSend":this._createBeforeSendAction();break;case"onUploadStarted":this._createUploadStartedAction();break;case"onUploaded":this._createUploadedAction();break;case"onFilesUploaded":this._createFilesUploadedAction();break;case"onProgress":this._createProgressAction();break;case"onUploadError":this._createUploadErrorAction();break;case"onUploadAborted":this._createUploadAbortedAction();break;case"onDropZoneEnter":this._createDropZoneEnterAction();break;case"onDropZoneLeave":this._createDropZoneLeaveAction();break;case"useNativeInputClick":this._renderInput();break;case"useDragOver":this._attachDragEventHandlers(this._$inputWrapper);break;case"inputAttr":this._applyInputAttributes(this.option(t));break;default:super._optionChanged(e)}}_resetInputValue(e){this.option("uploadMode")==="useForm"&&!e||(this._doPreventInputChange=!0,this._$fileInput.val(""),this._doPreventInputChange=!1)}clear(){this.option("value",[])}}class J{constructor(e,t){this.file=e,this.chunkSize=t,this.index=0}read(){if(!this.file)return null;const e=this.createBlobResult(this.file,this.index,this.chunkSize);return e.isCompleted&&(this.file=null),this.index++,e}createBlobResult(e,t,i){const a=t*i;return{blob:this.sliceFile(e,a,i),index:t,isCompleted:a+i>=e.size}}sliceFile(e,t,i){return e.slice?e.slice(t,t+i):e.webkitSlice?e.webkitSlice(t,t+i):null}}class O{constructor(e){this.fileUploader=e}upload(e){e.isInitialized&&e.isAborted&&this.fileUploader._resetFileState(e),e.isValid()&&!e.uploadStarted&&(this._prepareFileBeforeUpload(e),this._uploadCore(e))}abortUpload(e){if(!(e._isError||e._isLoaded||e.isAborted||!e.uploadStarted)&&(e.isAborted=!0,e.request&&e.request.abort(),this._isCustomCallback("abortUpload"))){const t=this.fileUploader.option("abortUpload"),i=this._createUploadArgument(e);let a=null;try{const s=t(e.value,i);a=$(s)}catch(s){a=y().reject(s).promise()}a.done(()=>e.onAbort.fire()).fail(s=>this._handleFileError(e,s))}}_beforeSend(e,t){const i=this._createUploadArgument(t);this.fileUploader._beforeSendAction({request:e,file:t.value,uploadInfo:i}),t.request=e}_createUploadArgument(e){}_uploadCore(e){}_isCustomCallback(e){const t=this.fileUploader.option(e);return t&&S(t)}_handleProgress(e,t){e._isError||(e._isProgressStarted=!0,this._handleProgressCore(e,t))}_handleProgressCore(e,t){}_handleFileError(e,t){e._isError=!0,e.onError.fire(t)}_prepareFileBeforeUpload(e){if(e.$file){var t;(t=e.progressBar)===null||t===void 0||t.dispose(),this.fileUploader._createFileProgressBar(e)}e.isInitialized||(e.onLoadStart.add(this._onUploadStarted.bind(this,e)),e.onLoad.add(this._onLoadedHandler.bind(this,e)),e.onError.add(this._onErrorHandler.bind(this,e)),e.onAbort.add(this._onAbortHandler.bind(this,e)),e.onProgress.add(this._onProgressHandler.bind(this,e)),e.isInitialized=!0)}_shouldHandleError(e,t){return(this._isStatusError(t.status)||!e._isProgressStarted)&&!e.isAborted}_isStatusError(e){return e>=400&&e<500||e>=500&&e<600}_onUploadStarted(e,t){e.uploadStarted=!0,this.fileUploader._uploadStartedAction({file:e.value,event:t,request:e.request})}_onAbortHandler(e,t){const i={file:e.value,event:t,request:e.request,message:this.fileUploader._getUploadAbortedStatusMessage()};this.fileUploader._uploadAbortedAction(i),this.fileUploader._setStatusMessage(e,i.message),this.fileUploader._handleAllFilesUploaded()}_onErrorHandler(e,t){const i={file:e.value,event:void 0,request:e.request,error:t,message:this.fileUploader.option("uploadFailedMessage")};this.fileUploader._uploadErrorAction(i),this.fileUploader._setStatusMessage(e,i.message),this.fileUploader._handleAllFilesUploaded()}_onLoadedHandler(e,t){const i={file:e.value,event:t,request:e.request,message:this.fileUploader.option("uploadedMessage")};e._isLoaded=!0,this.fileUploader._uploadedAction(i),this.fileUploader._setStatusMessage(e,i.message),this.fileUploader._handleAllFilesUploaded()}_onProgressHandler(e,t){if(e){const i=this.fileUploader._getTotalFilesSize(),a=this.fileUploader._getTotalLoadedFilesSize(),s=Math.min(t.loaded,e.value.size),r=s-e.loadedSize;e.loadedSize=s,this.fileUploader._updateTotalProgress(i,a+r),this.fileUploader._updateProgressBar(e,this._getLoadedData(s,t.total,r,t))}}_getLoadedData(e,t,i,a){return{loaded:e,total:t,currentSegmentSize:i}}_extendFormData(e){const t=this.fileUploader.option("uploadCustomData");for(const i in t)Object.prototype.hasOwnProperty.call(t,i)&&d(t[i])&&e.append(i,t[i])}}class H extends O{constructor(e){super(e),this.chunkSize=this.fileUploader.option("chunkSize")}_uploadCore(e){const t=e.value,i={name:t.name,loadedBytes:0,type:t.type,blobReader:new J(t,this.chunkSize),guid:new z,fileSize:t.size,count:this._getFileChunksCount(t),customData:{}};e.chunksData=i,this._sendChunk(e,i)}_getFileChunksCount(e){return e.size===0?1:Math.ceil(e.size/this.chunkSize)}_sendChunk(e,t){const i=t.blobReader.read();t.currentChunk=i,i&&this._sendChunkCore(e,t,i).done(()=>{e.isAborted||(t.loadedBytes+=i.blob.size,e.onProgress.fire({loaded:t.loadedBytes,total:e.value.size}),i.isCompleted&&e.onLoad.fire(),setTimeout(()=>this._sendChunk(e,t)))}).fail(a=>{this._shouldHandleError(e,a)&&this._handleFileError(e,a)})}_sendChunkCore(e,t,i){}_tryRaiseStartLoad(e){e.isStartLoad||(e.isStartLoad=!0,e.onLoadStart.fire())}_getEvent(e){return null}_createUploadArgument(e){return this._createChunksInfo(e.chunksData)}_createChunksInfo(e){return{bytesUploaded:e.loadedBytes,chunkCount:e.count,customData:e.customData,chunkBlob:e.currentChunk.blob,chunkIndex:e.currentChunk.index}}}class Q extends H{_sendChunkCore(e,t,i){return I.sendRequest({url:this.fileUploader.option("uploadUrl"),method:this.fileUploader.option("uploadMethod"),headers:this.fileUploader.option("uploadHeaders"),beforeSend:a=>this._beforeSend(a,e),upload:{onprogress:a=>this._handleProgress(e,a),onloadstart:()=>this._tryRaiseStartLoad(e),onabort:()=>e.onAbort.fire()},data:this._createFormData({fileName:t.name,blobName:this.fileUploader.option("name"),blob:i.blob,index:i.index,count:t.count,type:t.type,guid:t.guid,size:t.fileSize})})}_createFormData(e){const t=new v.FormData;return t.append(e.blobName,e.blob),t.append("chunkMetadata",JSON.stringify({FileName:e.fileName,Index:e.index,TotalCount:e.count,FileSize:e.size,FileType:e.type,FileGuid:e.guid})),this._extendFormData(t),t}}class ee extends H{_sendChunkCore(e,t){this._tryRaiseStartLoad(e);const i=this._createChunksInfo(t),a=this.fileUploader.option("uploadChunk");try{const s=a(e.value,i);return $(s)}catch(s){return y().reject(s).promise()}}_shouldHandleError(e,t){return!0}}class P extends O{_uploadCore(e){e.loadedSize=0,this._uploadFile(e).done(()=>{e.isAborted||e.onLoad.fire()}).fail(t=>{this._shouldHandleError(e,t)&&this._handleFileError(e,t)})}_uploadFile(e){}_handleProgressCore(e,t){e.onProgress.fire(t)}_getLoadedData(e,t,i,a){const s=super._getLoadedData(e,t,i,a);return s.event=a,s}}class te extends P{_uploadFile(e){return I.sendRequest({url:this.fileUploader.option("uploadUrl"),method:this.fileUploader.option("uploadMethod"),headers:this.fileUploader.option("uploadHeaders"),beforeSend:t=>this._beforeSend(t,e),upload:{onprogress:t=>this._handleProgress(e,t),onloadstart:()=>e.onLoadStart.fire(),onabort:()=>e.onAbort.fire()},data:this._createFormData(this.fileUploader.option("name"),e.value)})}_createFormData(e,t){const i=new v.FormData;return i.append(e,t,t.name),this._extendFormData(i),i}}class ie extends P{_uploadFile(e){e.onLoadStart.fire();const t=a=>{const s={loaded:a,total:e.value.size};this._handleProgress(e,s)},i=this.fileUploader.option("uploadFile");try{const a=i(e.value,t);return $(a)}catch(a){return y().reject(a).promise()}}_shouldHandleError(e,t){return!0}}E("dxFileUploader",K);export{K as F};
