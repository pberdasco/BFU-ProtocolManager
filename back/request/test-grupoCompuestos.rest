@host = localhost
@port = 5111
### grupoCompuestos/ 
#* allowedFields = ["id", "nombre", "matrizCodigo", "matriz"];

### GET 
### ? Todos los compuestos
GET http://{{host}}:{{port}}/api/grupoCompuestos/

### ? Compuestos por el sinonimo
# Este request filtra compuesto con sinonimo = 'gro'
# Formato interno: ["nombre","=","HTP 8015 - Full"]
GET http://{{host}}:{{port}}/api/grupoCompuestos?$filter=[%22nombre%22%2C%22%3D%22%2C%22HTP 8015 - Full%22]


### ? Get por ID
GET http://{{host}}:{{port}}/api/grupoCompuestos/3

### Updates
### ? Actualizar un compuestp que no existe
PUT http://{{host}}:{{port}}/api/grupoCompuestos/45
Content-Type: application/json

{
  "nombre": "Hidrocarburos Totales (GRO + DRO)",
  "matrizCodigo": 2
}

### ? Actualizar un Compuesto - nombre duplicado
PUT http://{{host}}:{{port}}/api/grupoCompuestos/2
Content-Type: application/json

{
  "nombre": "BTEX 8015",
  "matrizCodigo": 2,
  "metodoId": 4
}

### ? Actualizar un Compuesto
PUT http://{{host}}:{{port}}/api/grupoCompuestos/2
Content-Type: application/json

{
  "nombre": "BTEX 8016",
  "matrizCodigo": 2,
  "metodoId": 6
}


### Create
### ? Crear un Compuesto 
POST http://{{host}}:{{port}}/api/grupoCompuestos/
Content-Type: application/json

{
  "nombre": "Metil ter-Butil Eter (MTBE)*",
  "matrizCodigo": 2
}

### Delete
### ? Borrar un compuesto que no existe
DELETE http://{{host}}:{{port}}/api/grupoCompuestos/35

### Delete
### ? Borrar un labortorio que s√≠ existe
DELETE http://{{host}}:{{port}}/api/compuestos/5
